{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["class $a5fd07fa01589658$export$985739bfa5723e08 {\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.initialState = initialState;\n        this.state = JSON.parse(JSON.stringify(initialState));\n        this.status = $a5fd07fa01589658$export$985739bfa5723e08.STATUS_IDLE;\n        this.score = 0;\n    }\n    static STATUS_IDLE = \"idle\";\n    static STATUS_PLAYING = \"playing\";\n    static STATUS_WIN = \"win\";\n    static STATUS_LOSE = \"lose\";\n    moveLeft() {\n        const state = this.getState();\n        for(let row = 0; row < 4; row++){\n            const cache = [];\n            for(let cell = 0; cell < 4; cell++){\n                const currentDigit = state[row][cell];\n                if (!currentDigit) continue;\n                cache.push(currentDigit);\n            }\n            for(let i = 0; i < cache.length; i++){\n                const currentDigit = cache[i];\n                const nextDigit = i + 1 < cache.length ? cache[i + 1] : null;\n                if (!nextDigit) break;\n                if (currentDigit === nextDigit) {\n                    const prevScore = this.getScore();\n                    const currentScore = prevScore + currentDigit * 2;\n                    this.score = currentScore;\n                    cache.splice(i, 2, currentDigit * 2);\n                }\n            }\n            if (cache.length === 4) continue;\n            while(cache.length < 4)cache.push(0);\n            for(let cell = 0; cell < 4; cell++)state[row][cell] = cache[cell];\n        }\n    }\n    moveRight() {\n        this.reverseStateByRows();\n        this.moveLeft();\n        this.reverseStateByRows();\n    }\n    moveUp() {\n        this.rotateStateBackwardBy90Deg();\n        this.moveLeft();\n        this.rotateStateForwardBy90Deg();\n    }\n    moveDown() {\n        this.rotateStateForwardBy90Deg();\n        this.moveLeft();\n        this.rotateStateBackwardBy90Deg();\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.state;\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.state = JSON.parse(JSON.stringify(this.initialState));\n        this.status = $a5fd07fa01589658$export$985739bfa5723e08.STATUS_PLAYING;\n        this.score = 0;\n        this.addRandomDigitToEmptyCell(2);\n    }\n    restart() {\n        this.state = JSON.parse(JSON.stringify(this.initialState));\n        this.status = $a5fd07fa01589658$export$985739bfa5723e08.STATUS_IDLE;\n        this.score = 0;\n    }\n    rotateStateBackwardBy90Deg() {\n        const state = this.getState();\n        const stateCopy = JSON.parse(JSON.stringify(state));\n        for(let j = 3; j >= 0; j--)for(let i = 0; i < 4; i++)state[3 - j][i] = stateCopy[i][j];\n    }\n    rotateStateForwardBy90Deg() {\n        const state = this.getState();\n        const stateCopy = JSON.parse(JSON.stringify(state));\n        for(let i = 3; i >= 0; i--)for(let j = 0; j < 4; j++)state[j][3 - i] = stateCopy[i][j];\n    }\n    reverseStateByRows() {\n        const state = this.getState();\n        for(let row = 0; row < 4; row++)state[row].reverse();\n    }\n    checkIsPlayerWin() {\n        const state = this.getState();\n        let isPlayerWin = false;\n        for(let row = 0; row < 4; row++)if (state[row].includes(2048)) isPlayerWin = true;\n        return isPlayerWin;\n    }\n    checkIsPlayerLose() {\n        const state = this.getState();\n        let isPlayerLose = false;\n        let hasEmptyCell = false;\n        let hasPairedDigits = false;\n        for(let row = 0; row < 4; row++)if (state[row].includes(0)) {\n            hasEmptyCell = true;\n            break;\n        }\n        for(let row = 0; row < 4; row++){\n            for(let cell = 0; cell < 3; cell++)if (state[row][cell] === state[row][cell + 1]) {\n                hasPairedDigits = true;\n                break;\n            }\n        }\n        for(let col = 0; col < 4; col++){\n            for(let row = 0; row < 3; row++)if (state[row][col] === state[row + 1][col]) {\n                hasPairedDigits = true;\n                break;\n            }\n        }\n        if (!hasEmptyCell && !hasPairedDigits) isPlayerLose = true;\n        return isPlayerLose;\n    }\n    addRandomDigitToEmptyCell(digitsCount) {\n        const state = this.getState();\n        let addedDigitsCount = 0;\n        while(addedDigitsCount < digitsCount){\n            const [row, cell] = this.getRandomCoordinates();\n            const randomDigit = this.getRandomDigit();\n            if (state[row][cell]) continue;\n            state[row][cell] = randomDigit;\n            addedDigitsCount++;\n        }\n    }\n    getRandomCoordinates() {\n        const rowCoordinate = Math.floor(Math.random() * 4);\n        const cellCoordinate = Math.floor(Math.random() * 4);\n        return [\n            rowCoordinate,\n            cellCoordinate\n        ];\n    }\n    getRandomDigit() {\n        const randomNumber1To100 = Math.floor(Math.random() * 100) + 1;\n        if (randomNumber1To100 > 90) return 4;\n        return 2;\n    }\n}\n\n\nconst $09e991522ca7e64e$var$game = new (0, $a5fd07fa01589658$export$985739bfa5723e08)();\nconst $09e991522ca7e64e$var$table = document.querySelector(\"table\");\nconst $09e991522ca7e64e$var$tbody = $09e991522ca7e64e$var$table.tBodies[0];\nconst $09e991522ca7e64e$var$button = document.querySelector(\"button\");\nconst $09e991522ca7e64e$var$startMessage = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$loseMessage = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$winMessage = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$score = document.querySelector(\".game-score\");\n$09e991522ca7e64e$var$button.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$button.classList.contains(\"restart\")) {\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$button.classList.remove(\"restart\");\n        $09e991522ca7e64e$var$button.classList.add(\"start\");\n        $09e991522ca7e64e$var$button.textContent = \"Start\";\n        $09e991522ca7e64e$var$startMessage.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$winMessage.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$score.innerText = \"0\";\n        $09e991522ca7e64e$var$updateTable();\n        return;\n    }\n    $09e991522ca7e64e$var$game.start();\n    $09e991522ca7e64e$var$startMessage.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$updateTable();\n});\ndocument.addEventListener(\"keydown\", (e)=>{\n    const key = e.key;\n    if (key === \"ArrowRight\" || key === \"ArrowLeft\" || key === \"ArrowUp\" || key === \"ArrowDown\") {\n        const state = $09e991522ca7e64e$var$game.getState();\n        const gameStatus = $09e991522ca7e64e$var$game.getStatus();\n        if (gameStatus === (0, $a5fd07fa01589658$export$985739bfa5723e08).STATUS_IDLE || gameStatus === (0, $a5fd07fa01589658$export$985739bfa5723e08).STATUS_LOSE || gameStatus === (0, $a5fd07fa01589658$export$985739bfa5723e08).STATUS_WIN) return;\n        if ($09e991522ca7e64e$var$button.classList.contains(\"start\")) {\n            $09e991522ca7e64e$var$button.classList.remove(\"start\");\n            $09e991522ca7e64e$var$button.classList.add(\"restart\");\n            $09e991522ca7e64e$var$button.textContent = \"Restart\";\n        }\n        const currentStateString = JSON.stringify(state);\n        switch(key){\n            case \"ArrowRight\":\n                $09e991522ca7e64e$var$game.moveRight();\n                break;\n            case \"ArrowLeft\":\n                $09e991522ca7e64e$var$game.moveLeft();\n                break;\n            case \"ArrowUp\":\n                $09e991522ca7e64e$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $09e991522ca7e64e$var$game.moveDown();\n                break;\n            default:\n                break;\n        }\n        const nextStateString = JSON.stringify(state);\n        if (currentStateString === nextStateString) return;\n        $09e991522ca7e64e$var$score.innerText = `${$09e991522ca7e64e$var$game.getScore()}`;\n        $09e991522ca7e64e$var$game.addRandomDigitToEmptyCell(1);\n        $09e991522ca7e64e$var$updateTable();\n        const isPlayerWin = $09e991522ca7e64e$var$game.checkIsPlayerWin();\n        if (isPlayerWin) {\n            $09e991522ca7e64e$var$game.status = (0, $a5fd07fa01589658$export$985739bfa5723e08).STATUS_WIN;\n            $09e991522ca7e64e$var$winMessage.classList.remove(\"hidden\");\n            return;\n        }\n        const isPlayerLose = $09e991522ca7e64e$var$game.checkIsPlayerLose();\n        if (isPlayerLose) {\n            $09e991522ca7e64e$var$game.status = (0, $a5fd07fa01589658$export$985739bfa5723e08).STATUS_LOSE;\n            $09e991522ca7e64e$var$loseMessage.classList.remove(\"hidden\");\n        }\n    }\n});\nfunction $09e991522ca7e64e$var$updateTable() {\n    const state = $09e991522ca7e64e$var$game.getState();\n    for(let row = 0; row < 4; row++)for(let cell = 0; cell < 4; cell++){\n        const currentDigit = state[row][cell];\n        if (!currentDigit) {\n            $09e991522ca7e64e$var$tbody.rows[row].cells[cell].className = \"field-cell\";\n            $09e991522ca7e64e$var$tbody.rows[row].cells[cell].innerText = \"\";\n            continue;\n        }\n        $09e991522ca7e64e$var$tbody.rows[row].cells[cell].className = `field-cell field-cell--${currentDigit}`;\n        $09e991522ca7e64e$var$tbody.rows[row].cells[cell].innerText = `${currentDigit}`;\n    }\n}\n\n\n//# sourceMappingURL=index.9f7f956e.js.map\n","import { Game } from \"../modules/Game.class\";\n\nconst game = new Game();\n\nconst table = document.querySelector(\"table\");\nconst tbody = table.tBodies[0];\nconst button = document.querySelector(\"button\");\n\nconst startMessage = document.querySelector(\".message-start\");\nconst loseMessage = document.querySelector(\".message-lose\");\nconst winMessage = document.querySelector(\".message-win\");\nconst score = document.querySelector(\".game-score\");\n\nbutton.addEventListener(\"click\", () => {\n  if (button.classList.contains(\"restart\")) {\n    game.restart();\n\n    button.classList.remove(\"restart\");\n    button.classList.add(\"start\");\n    button.textContent = \"Start\";\n\n    startMessage.classList.remove(\"hidden\");\n    loseMessage.classList.add(\"hidden\");\n    winMessage.classList.add(\"hidden\");\n\n    score.innerText = \"0\";\n\n    updateTable();\n\n    return;\n  }\n\n  game.start();\n\n  startMessage.classList.add(\"hidden\");\n\n  updateTable();\n});\n\ndocument.addEventListener(\"keydown\", (e) => {\n  const key = e.key;\n\n  if (\n    key === \"ArrowRight\" ||\n    key === \"ArrowLeft\" ||\n    key === \"ArrowUp\" ||\n    key === \"ArrowDown\"\n  ) {\n    const state = game.getState();\n    const gameStatus = game.getStatus();\n\n    if (\n      gameStatus === Game.STATUS_IDLE ||\n      gameStatus === Game.STATUS_LOSE ||\n      gameStatus === Game.STATUS_WIN\n    ) {\n      return;\n    }\n\n    if (button.classList.contains(\"start\")) {\n      button.classList.remove(\"start\");\n      button.classList.add(\"restart\");\n      button.textContent = \"Restart\";\n    }\n\n    const currentStateString = JSON.stringify(state);\n\n    switch (key) {\n      case \"ArrowRight\":\n        game.moveRight();\n\n        break;\n\n      case \"ArrowLeft\":\n        game.moveLeft();\n\n        break;\n\n      case \"ArrowUp\":\n        game.moveUp();\n\n        break;\n\n      case \"ArrowDown\":\n        game.moveDown();\n\n        break;\n\n      default:\n        break;\n    }\n\n    const nextStateString = JSON.stringify(state);\n\n    if (currentStateString === nextStateString) {\n      return;\n    }\n\n    score.innerText = `${game.getScore()}`;\n\n    game.addRandomDigitToEmptyCell(1);\n    updateTable();\n\n    const isPlayerWin = game.checkIsPlayerWin();\n\n    if (isPlayerWin) {\n      game.status = Game.STATUS_WIN;\n      winMessage.classList.remove(\"hidden\");\n\n      return;\n    }\n\n    const isPlayerLose = game.checkIsPlayerLose();\n\n    if (isPlayerLose) {\n      game.status = Game.STATUS_LOSE;\n      loseMessage.classList.remove(\"hidden\");\n    }\n  }\n});\n\nfunction updateTable() {\n  const state = game.getState();\n\n  for (let row = 0; row < 4; row++) {\n    for (let cell = 0; cell < 4; cell++) {\n      const currentDigit = state[row][cell];\n\n      if (!currentDigit) {\n        tbody.rows[row].cells[cell].className = \"field-cell\";\n        tbody.rows[row].cells[cell].innerText = \"\";\n\n        continue;\n      }\n\n      tbody.rows[row].cells[\n        cell\n      ].className = `field-cell field-cell--${currentDigit}`;\n\n      tbody.rows[row].cells[cell].innerText = `${currentDigit}`;\n    }\n  }\n}\n","export class Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ]\n  ) {\n    this.initialState = initialState;\n    this.state = JSON.parse(JSON.stringify(initialState));\n    this.status = Game.STATUS_IDLE;\n    this.score = 0;\n  }\n\n  static STATUS_IDLE = \"idle\";\n  static STATUS_PLAYING = \"playing\";\n  static STATUS_WIN = \"win\";\n  static STATUS_LOSE = \"lose\";\n\n  moveLeft() {\n    const state = this.getState();\n\n    for (let row = 0; row < 4; row++) {\n      const cache = [];\n\n      for (let cell = 0; cell < 4; cell++) {\n        const currentDigit = state[row][cell];\n\n        if (!currentDigit) {\n          continue;\n        }\n\n        cache.push(currentDigit);\n      }\n\n      for (let i = 0; i < cache.length; i++) {\n        const currentDigit = cache[i];\n        const nextDigit = i + 1 < cache.length ? cache[i + 1] : null;\n\n        if (!nextDigit) {\n          break;\n        }\n\n        if (currentDigit === nextDigit) {\n          const prevScore = this.getScore();\n          const currentScore = prevScore + currentDigit * 2;\n\n          this.score = currentScore;\n\n          cache.splice(i, 2, currentDigit * 2);\n        }\n      }\n\n      if (cache.length === 4) {\n        continue;\n      }\n\n      while (cache.length < 4) {\n        cache.push(0);\n      }\n\n      for (let cell = 0; cell < 4; cell++) {\n        state[row][cell] = cache[cell];\n      }\n    }\n  }\n\n  moveRight() {\n    this.reverseStateByRows();\n    this.moveLeft();\n    this.reverseStateByRows();\n  }\n\n  moveUp() {\n    this.rotateStateBackwardBy90Deg();\n    this.moveLeft();\n    this.rotateStateForwardBy90Deg();\n  }\n\n  moveDown() {\n    this.rotateStateForwardBy90Deg();\n    this.moveLeft();\n    this.rotateStateBackwardBy90Deg();\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.status = Game.STATUS_PLAYING;\n    this.score = 0;\n    this.addRandomDigitToEmptyCell(2);\n  }\n\n  restart() {\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.status = Game.STATUS_IDLE;\n    this.score = 0;\n  }\n\n  rotateStateBackwardBy90Deg() {\n    const state = this.getState();\n    const stateCopy = JSON.parse(JSON.stringify(state));\n\n    for (let j = 3; j >= 0; j--) {\n      for (let i = 0; i < 4; i++) {\n        state[3 - j][i] = stateCopy[i][j];\n      }\n    }\n  }\n\n  rotateStateForwardBy90Deg() {\n    const state = this.getState();\n    const stateCopy = JSON.parse(JSON.stringify(state));\n\n    for (let i = 3; i >= 0; i--) {\n      for (let j = 0; j < 4; j++) {\n        state[j][3 - i] = stateCopy[i][j];\n      }\n    }\n  }\n\n  reverseStateByRows() {\n    const state = this.getState();\n\n    for (let row = 0; row < 4; row++) {\n      state[row].reverse();\n    }\n  }\n\n  checkIsPlayerWin() {\n    const state = this.getState();\n    let isPlayerWin = false;\n\n    for (let row = 0; row < 4; row++) {\n      if (state[row].includes(2048)) {\n        isPlayerWin = true;\n      }\n    }\n\n    return isPlayerWin;\n  }\n\n  checkIsPlayerLose() {\n    const state = this.getState();\n\n    let isPlayerLose = false;\n    let hasEmptyCell = false;\n    let hasPairedDigits = false;\n\n    for (let row = 0; row < 4; row++) {\n      if (state[row].includes(0)) {\n        hasEmptyCell = true;\n\n        break;\n      }\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let cell = 0; cell < 3; cell++) {\n        if (state[row][cell] === state[row][cell + 1]) {\n          hasPairedDigits = true;\n\n          break;\n        }\n      }\n    }\n\n    for (let col = 0; col < 4; col++) {\n      for (let row = 0; row < 3; row++) {\n        if (state[row][col] === state[row + 1][col]) {\n          hasPairedDigits = true;\n\n          break;\n        }\n      }\n    }\n\n    if (!hasEmptyCell && !hasPairedDigits) {\n      isPlayerLose = true;\n    }\n\n    return isPlayerLose;\n  }\n\n  addRandomDigitToEmptyCell(digitsCount) {\n    const state = this.getState();\n    let addedDigitsCount = 0;\n\n    while (addedDigitsCount < digitsCount) {\n      const [row, cell] = this.getRandomCoordinates();\n      const randomDigit = this.getRandomDigit();\n\n      if (state[row][cell]) {\n        continue;\n      }\n\n      state[row][cell] = randomDigit;\n\n      addedDigitsCount++;\n    }\n  }\n\n  getRandomCoordinates() {\n    const rowCoordinate = Math.floor(Math.random() * 4);\n    const cellCoordinate = Math.floor(Math.random() * 4);\n\n    return [rowCoordinate, cellCoordinate];\n  }\n\n  getRandomDigit() {\n    const randomNumber1To100 = Math.floor(Math.random() * 100) + 1;\n\n    if (randomNumber1To100 > 90) {\n      return 4;\n    }\n\n    return 2;\n  }\n}\n"],"names":["$a5fd07fa01589658$export$985739bfa5723e08","constructor","initialState","state","JSON","parse","stringify","status","STATUS_IDLE","score","STATUS_PLAYING","STATUS_WIN","STATUS_LOSE","moveLeft","getState","row","cache","cell","currentDigit","push","i","length","nextDigit","currentScore","prevScore","getScore","splice","moveRight","reverseStateByRows","moveUp","rotateStateBackwardBy90Deg","rotateStateForwardBy90Deg","moveDown","getStatus","start","addRandomDigitToEmptyCell","restart","stateCopy","j","reverse","checkIsPlayerWin","isPlayerWin","includes","checkIsPlayerLose","isPlayerLose","hasEmptyCell","hasPairedDigits","col","digitsCount","addedDigitsCount","getRandomCoordinates","randomDigit","getRandomDigit","Math","floor","random","randomNumber1To100","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$tbody","$09e991522ca7e64e$var$table","document","querySelector","tBodies","$09e991522ca7e64e$var$button","$09e991522ca7e64e$var$startMessage","$09e991522ca7e64e$var$loseMessage","$09e991522ca7e64e$var$winMessage","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$updateTable","rows","cells","className","innerText","addEventListener","classList","contains","remove","add","textContent","e","key","gameStatus","currentStateString"],"version":3,"file":"index.9f7f956e.js.map"}